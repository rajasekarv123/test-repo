{"jsonrpc":"2.0","id":0,"result":{"qScript":"///$tab Main\r\n\r\n///$tab Section\r\nSet dataManagerTables = '','Cars','Customers','Claims Staff','Office UK','Car Claims','UK Counties','uk-county-borders.kmz/Borders/United Kingdom/England/Shire Counties','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Greater Manchester','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Merseyside','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/South Yorkshire','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Tyne and Wear','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/West Midlands','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/West Yorkshire','uk-county-borders.kmz/Borders/United Kingdom/England/London Boroughs','uk-county-borders.kmz/Borders/United Kingdom/England/City of London','uk-county-borders.kmz/Borders/United Kingdom/England/Unitary Authorites','uk-county-borders.kmz/Borders/United Kingdom/Scotland/Council Areas','uk-county-borders.kmz/Borders/United Kingdom/Wales/Unitary Authorities','uk-county-borders.kmz/Borders/United Kingdom/Northern Ireland/Districts','uk-county-borders.kmz/Borders/Crown Dependencies/Isle of Man','uk-county-borders.kmz/Borders/Crown Dependencies/Guernsey/Islands of Guernsey','uk-county-borders.kmz/Borders/Crown Dependencies/Jersey','Regions','Third Parties','Policies Cars','Suppliers','Channel','Brokers','BenchmarkDate';\r\n//This block renames script tables from non generated section which conflict with the names of managed tables\r\n\r\nFor each name in $(dataManagerTables) \r\n    Let index = 0;\r\n    Let currentName = name; \r\n    Let tableNumber = TableNumber(name); \r\n    Let matches = 0; \r\n    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)\r\n        index = index + 1; \r\n        currentName = name & '-' & index; \r\n        tableNumber = TableNumber(currentName) \r\n        matches = Match('$(currentName)', $(dataManagerTables));\r\n    Loop \r\n    If index > 0 then \r\n            Rename Table '$(name)' to '$(currentName)'; \r\n    EndIf; \r\nNext; \r\nSet dataManagerTables = ;\r\n\r\n\r\nUnqualify *;\r\n\r\nLet vDateDiff = Year(Today())-'2022';\r\n\r\n[Cars]:\r\nLOAD\r\n    CarCounter,\r\n    CarId,\r\n    \"Vehicle Country of Make\",\r\n    \"Vehicle Make\",\r\n    \"Vehicle Model\",\r\n    \"Vehicle Type\",\r\n    \"Vehicle Rating Group\",\r\n    \"VRG(50)\"\r\nFROM [lib://DataFiles/Cars.qvd]\r\n(qvd);\r\n\r\n\r\n[Policies Cars]:\r\nLOAD\r\n    PolicyCounter,\r\n    \"Customer ID\",\r\n    \"Policy Id\",\r\n    \"Product Id\",\r\n    \"Policy Staff Id\",\r\n    CarId,\r\n    \"Cover Type\",\r\n    \"Policy Excess\",\r\n    \"Payment Freq\",\r\n    \"Annual Premium\",\r\n    \"Policy Start Date\",\r\n    Date([Policy End Date] ) AS [Policy End Date]\r\n//     \"Policy End Date\"\r\nFROM [lib://DataFiles/Policies Cars.qvd]\r\n(qvd);\r\n\r\n[Third Parties]:\r\nLOAD\r\n    TPCounter,\r\n    \"Claim Id\",\r\n    \"TP ID\",\r\n    \"TP Mobile Number\",\r\n    \"TP Age\",\r\n    \"TP Gender\",\r\n    \"TP Name\",\r\n    \"TP Email Address\",\r\n    \"TP Car Id\",\r\n    \"TP Post Code\"\r\nFROM [lib://DataFiles/Third Parties.qvd]\r\n(qvd);\r\n\r\n\r\n[Customers]:\r\nLOAD\r\n    CustomerCounter,\r\n    \"Customer ID\",\r\n    \"Broker Id\",\r\n    \"Customer Name\",\r\n    \"Customer Gender\",\r\n//    \"Customer DOB\",\r\n    Addyears(Date([Customer DOB]),($(vDateDiff))) AS [Customer DOB],\r\n    \"Customer Tel Num\",\r\n    LocationID\r\nFROM [lib://DataFiles/Customers.qvd]\r\n(qvd);\r\n\r\n\r\n[Car Claims]:\r\nLOAD\r\n    ClaimCounter,\r\n    \"Policy Id\",\r\n    \"Claim Id\",\r\n    \"Claim Handler-Staff ID\",\r\n    \"Supplier Id\",\r\n    \"Claim Status\",\r\n    \"Claim Reopen Count\",\r\n    \"Claim Type\",\r\n    \"Claim Sub-Type\",\r\n    \"Distance From PH Address\",\r\n    \"Police At Scene\",\r\n    \"TP Involved\",\r\n    \"Car Manufactured Yr\",\r\n    \"Total Claim Cost\",\r\n    Addyears(Date([Claim Occurrence Date]),($(vDateDiff))) AS [Claim Occurrence Date],\r\n\tAddyears(Date([Claim Notification Date]),($(vDateDiff))) AS [Claim Notification Date],\r\n\tAddyears(Date([Claim Settled Date]),($(vDateDiff))) AS [Claim Settled Date]\r\n//     \"Claim Occurrence Date\",\r\n//     \"Claim Notification Date\",\r\n//     \"Claim Settled Date\"\r\nFROM [lib://DataFiles/Car Claims.qvd]\r\n(qvd);\r\n\r\n\r\n[Brokers]:\r\nLOAD\r\n    BrokerCounter,\r\n    ChannelID,\r\n    \"Broker Id\",\r\n    BrokerName\r\nFROM [lib://DataFiles/Brokers.qvd]\r\n(qvd);\r\n\r\n\r\n[Suppliers]:\r\nLOAD\r\n    SupplierCounter,\r\n    \"Supplier Id\",\r\n    \"Supplier Name\",\r\n    \"Supplier Type\",\r\n    \"Supplier City\",\r\n    \"Supplier Hourly Rate\",\r\n    \"Supplier Satisfaction Rating\",\r\n    \"Supplier Complaints\"\r\nFROM [lib://DataFiles/Suppliers.qvd]\r\n(qvd);\r\n\r\n\r\nRegions:\r\nLOAD\r\n    LocationID,\r\n    CountryCode,\r\n    CountryName,\r\n    \"County-UK County Names\",\r\n    City,\r\n    Outcode,\r\n    Latitude,\r\n    Longitude\r\nFROM [lib://DataFiles/Regions.qvd]\r\n(qvd);\r\n\r\n\r\nChannel:\r\nLOAD\r\n    ChannelID,\r\n    Channel\r\nFROM [lib://DataFiles/Channel.qvd]\r\n(qvd);\r\n\r\n\r\n[Claims Staff]:\r\nLOAD\r\n    StaffCounter,\r\n    \"Claim Handler-Staff ID\",\r\n    \"Staff Name\",\r\n    \"Staff Gender\",\r\n    Addyears(Date([Staff DOB]),($(vDateDiff))) AS [Staff DOB],\r\n    Addyears(Date([Staff Hire Date]),($(vDateDiff))) AS [Staff Hire Date],\r\n//     \"Staff DOB\",\r\n//     \"Staff Hire Date\",\r\n    \"Staff Job Level\",\r\n    \"Staff Job Title\",\r\n    \"Staff Manager\",\r\n    OfficeId,\r\n    Department,\r\n    Team,\r\n    \"Contract Type\",\r\n    \"Working Hours (per wk)\",\r\n    \"Working Days (per wk)\",\r\n    \"Holiday Allowance\",\r\n    \"Holiday Taken\",\r\n    \"Holiday Booked\",\r\n    \"2 Weeks Booked\"\r\nFROM [lib://DataFiles/Claims Staff.qvd]\r\n(qvd);\r\n\r\n\r\n\r\n\r\n[Office UK]:\r\nLOAD\r\n    OfficeId,\r\n    CompanyCountry,\r\n    CompanyRegion,\r\n    CompanyOffice\r\nFROM [lib://DataFiles/Office UK.qvd]\r\n(qvd);\r\n\r\n\r\n[UK Counties]:\r\nLOAD\r\n    \"County-UK County Names\",\r\n    \"UK County Areas\"\r\nFROM [lib://DataFiles/UK Counties.qvd]\r\n(qvd);\r\n\r\n\r\n[autoCalendar]: \r\n  DECLARE FIELD DEFINITION Tagged ('$date')\r\nFIELDS\r\n  Dual(Year($1), YearStart($1)) AS [Year] Tagged ('$axis', '$year'),\r\n  Dual('Q'&Num(Ceil(Num(Month($1))/3)),Num(Ceil(NUM(Month($1))/3),00)) AS [Quarter] Tagged ('$quarter', '$cyclic'),\r\n  Dual(Year($1)&'-Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [YearQuarter] Tagged ('$yearquarter', '$qualified'),\r\n  Dual('Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [_YearQuarter] Tagged ('$yearquarter', '$hidden', '$simplified'),\r\n  Month($1) AS [Month] Tagged ('$month', '$cyclic'),\r\n  Dual(Year($1)&'-'&Month($1), monthstart($1)) AS [YearMonth] Tagged ('$axis', '$yearmonth', '$qualified'),\r\n  Dual(Month($1), monthstart($1)) AS [_YearMonth] Tagged ('$axis', '$yearmonth', '$simplified', '$hidden'),\r\n  Dual('W'&Num(Week($1),00), Num(Week($1),00)) AS [Week] Tagged ('$weeknumber', '$cyclic'),\r\n  Date(Floor($1)) AS [Date] Tagged ('$axis', '$date', '$qualified'),\r\n  Date(Floor($1), 'D') AS [_Date] Tagged ('$axis', '$date', '$hidden', '$simplified'),\r\n  If (DayNumberOfYear($1) <= DayNumberOfYear(Today()), 1, 0) AS [InYTD] ,\r\n  Year(Today())-Year($1) AS [YearsAgo] ,\r\n  If (DayNumberOfQuarter($1) <= DayNumberOfQuarter(Today()),1,0) AS [InQTD] ,\r\n  4*Year(Today())+Ceil(Month(Today())/3)-4*Year($1)-Ceil(Month($1)/3) AS [QuartersAgo] ,\r\n  Ceil(Month(Today())/3)-Ceil(Month($1)/3) AS [QuarterRelNo] ,\r\n  If(Day($1)<=Day(Today()),1,0) AS [InMTD] ,\r\n  12*Year(Today())+Month(Today())-12*Year($1)-Month($1) AS [MonthsAgo] ,\r\n  Month(Today())-Month($1) AS [MonthRelNo] ,\r\n  If(WeekDay($1)<=WeekDay(Today()),1,0) AS [InWTD] ,\r\n  (WeekStart(Today())-WeekStart($1))/7 AS [WeeksAgo] ,\r\n  Week(Today())-Week($1) AS [WeekRelNo] ;\r\n\r\nDERIVE FIELDS FROM FIELDS [Customer DOB], [Staff DOB], [Staff Hire Date], [Claim Occurrence Date], [Claim Notification Date], [Claim Settled Date], [Policy Start Date], [Policy End Date], [BenchmarkDate] USING [autoCalendar] ;\r\n\r\n\r\nexit script;\r\n\r\n///$tab Auto-generated section\r\nSet dataManagerTables = '','Cars','Customers','Claims Staff','Office UK','Car Claims','UK Counties','uk-county-borders.kmz/Borders/United Kingdom/England/Shire Counties','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Greater Manchester','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Merseyside','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/South Yorkshire','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Tyne and Wear','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/West Midlands','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/West Yorkshire','uk-county-borders.kmz/Borders/United Kingdom/England/London Boroughs','uk-county-borders.kmz/Borders/United Kingdom/England/City of London','uk-county-borders.kmz/Borders/United Kingdom/England/Unitary Authorites','uk-county-borders.kmz/Borders/United Kingdom/Scotland/Council Areas','uk-county-borders.kmz/Borders/United Kingdom/Wales/Unitary Authorities','uk-county-borders.kmz/Borders/United Kingdom/Northern Ireland/Districts','uk-county-borders.kmz/Borders/Crown Dependencies/Isle of Man','uk-county-borders.kmz/Borders/Crown Dependencies/Guernsey/Islands of Guernsey','uk-county-borders.kmz/Borders/Crown Dependencies/Jersey','Regions','Third Parties','Policies Cars','Suppliers','Channel','Brokers','BenchmarkDate';\r\n//This block renames script tables from non generated section which conflict with the names of managed tables\r\n\r\nFor each name in $(dataManagerTables) \r\n    Let index = 0;\r\n    Let currentName = name; \r\n    Let tableNumber = TableNumber(name); \r\n    Let matches = 0; \r\n    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)\r\n        index = index + 1; \r\n        currentName = name & '-' & index; \r\n        tableNumber = TableNumber(currentName) \r\n        matches = Match('$(currentName)', $(dataManagerTables));\r\n    Loop \r\n    If index > 0 then \r\n            Rename Table '$(name)' to '$(currentName)'; \r\n    EndIf; \r\nNext; \r\nSet dataManagerTables = ;\r\n\r\n\r\nUnqualify *;\r\n\r\nLet vDateDiff = Year(Today())-'2019';\r\n\r\n[Cars]:\r\nLOAD\r\n\t[CarCounter],\r\n\t[CarId],\r\n\t[Vehicle Country of Make],\r\n\t[Vehicle Make],\r\n\t[Vehicle Model],\r\n\t[Vehicle Type],\r\n\t[Vehicle Rating Group],\r\n\t[VRG(50)]\r\n    //[Vehicle Image]\r\nFROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Cars.xlsx]\r\n(ooxml, embedded labels, table is Cars);\r\n\r\n\r\n[Customers]:\r\nLOAD\r\n\t[CustomerCounter],\r\n\t[Customer ID],\r\n\t[Broker Id],\r\n\t[Customer Name],\r\n\t[Customer Gender],\r\n\tAddyears(Date([Customer DOB]),($(vDateDiff))) AS [Customer DOB],\r\n\t[Customer Tel Num],\r\n\t[LocationID]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Customers.xlsx]\r\n (ooxml, embedded labels, table is Customers);\r\n\r\n[Claims Staff]:\r\nLOAD\r\n\t[StaffCounter],\r\n\t[Staff ID] AS [Claim Handler-Staff ID],\r\n\t[Staff Name],\r\n\t[Staff Gender],\r\n\tAddyears(Date([Staff DOB]),($(vDateDiff))) AS [Staff DOB],\r\n    Addyears(Date([Staff Hire Date]),($(vDateDiff))) AS [Staff Hire Date],\r\n\t[Staff Job Level],\r\n\t[Staff Job Title],\r\n\t[Staff Manager],\r\n\t[OfficeId],\r\n\t[Department],\r\n\t[Team],\r\n\t[Contract Type],\r\n\t[Working Hours (per wk)],\r\n\t[Working Days (per wk)],\r\n\t[Holiday Allowance],\r\n\t[Holiday Taken],\r\n\t[Holiday Booked],\r\n\t[2 Weeks Booked]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Insurance Staff.xlsx]\r\n(ooxml, embedded labels, table is [Claims Staff]);\r\n\r\n[Office UK]:\r\nLOAD\r\n\t[OfficeId],\r\n\t[CompanyCountry],\r\n\t[CompanyRegion],\r\n\t[CompanyOffice]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Offices.xlsx]\r\n(ooxml, embedded labels, table is [Office UK]);\r\n\r\n[Car Claims]:\r\nLOAD\r\n\t[ClaimCounter],\r\n\t[Policy Id],\r\n\t[Claim Id],\r\n\t[Claim Handler] AS [Claim Handler-Staff ID],\r\n\t[Supplier Id],\r\n\t[Claim Status],\r\n\t[Claim Reopen Count],\r\n\t[Claim Type],\r\n\t[Claim Sub-Type],\r\n\t[Distance From PH Address],\r\n\t[Police At Scene],\r\n\t[TP Involved],\r\n\t[Car Manufactured Yr],\r\n\t[Total Claim Cost],\r\n\tAddyears(Date([Claim Occurrence Date]),($(vDateDiff))) AS [Claim Occurrence Date],\r\n\tAddyears(Date([Claim Notification Date]),($(vDateDiff))) AS [Claim Notification Date],\r\n\tAddyears(Date([Claim Settled Date]),($(vDateDiff))) AS [Claim Settled Date]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Claims Cars.xlsx]\r\n(ooxml, embedded labels, table is [Car Claims]);\r\n\r\n[uk-county-borders.kmz/Borders/United Kingdom/England/Shire Counties]:\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Shire Counties]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Greater Manchester]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Merseyside]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/South Yorkshire]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Tyne and Wear]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/West Midlands]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/West Yorkshire]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/London Boroughs]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/City of London]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Unitary Authorites]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/Scotland/Council Areas]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/Wales/Unitary Authorities]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/Northern Ireland/Districts]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/Crown Dependencies/Isle of Man]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/Crown Dependencies/Guernsey/Islands of Guernsey]);\r\n\r\nLOAD\r\n\t[UK Counties Polygons.Name] AS [County-UK County Names],\r\n\t[UK Counties Polygons.Area] AS [UK County Areas]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]\r\n(kml, Table is [uk-county-borders.kmz/Borders/Crown Dependencies/Jersey]);\r\n\r\n\r\n\r\n[Regions]:\r\nLOAD\r\n\t[LocationID],\r\n\t[CountryCode],\r\n\t[CountryName],\r\n\t[County] AS [County-UK County Names],\r\n\t[City],\r\n\t[Outcode],\r\n\t[Latitude],\r\n\t[Longitude]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Location.xlsx]\r\n(ooxml, embedded labels, table is Regions);\r\n\r\n[Third Parties]:\r\nLOAD\r\n\t[TPCounter],\r\n\t[Claim Id],\r\n\t[TP ID],\r\n\t[TP Mobile Number],\r\n\t[TP Age],\r\n\t[TP Gender],\r\n\t[TP Name],\r\n\t[TP Email Address],\r\n\t[TP Car Id],\r\n\t[TP Post Code]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Third Parties.xlsx]\r\n(ooxml, embedded labels, table is Sheet1);\r\n\r\n[Policies Cars]:\r\nLOAD\r\n\t[PolicyCounter],\r\n\t[Customer ID],\r\n\t[Policy Id],\r\n\t[Product Id],\r\n\t[Policy Staff Id],\r\n\t[CarId],\r\n\t[Cover Type],\r\n\t[Policy Excess],\r\n\t[Payment Freq],\r\n\t[Annual Premium],\r\n\t[Policy Start Date],\r\n\tDate([Policy End Date] ) AS [Policy End Date]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Policies.xlsx]\r\n(ooxml, embedded labels, table is [Policies Cars]);\r\n\r\n[Suppliers]:\r\nLOAD\r\n\t[SupplierCounter],\r\n\t[Supplier Id],\r\n\t[Supplier Name],\r\n\t[Supplier Type],\r\n\t[Supplier City],\r\n\t[Supplier Hourly Rate],\r\n\t[Supplier Satisfaction Rating],\r\n\t[Supplier Complaints]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Suppliers.xlsx]\r\n(ooxml, embedded labels, table is Suppliers);\r\n\r\n[Channel]:\r\nLOAD\r\n\t[ChannelID],\r\n\t[Channel]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Channel.xlsx]\r\n(ooxml, embedded labels, table is Channel);\r\n\r\n[Brokers]:\r\nLOAD\r\n\t[BrokerCounter],\r\n\t[ChannelID],\r\n\t[Broker Id],\r\n\t[BrokerName]\r\n FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Channel.xlsx]\r\n(ooxml, embedded labels, table is Brokers);\r\n\r\n\r\nRENAME TABLE [uk-county-borders.kmz/Borders/United Kingdom/England/Shire Counties] to [UK Counties];\r\n\r\n\r\n[autoCalendar]: \r\n  DECLARE FIELD DEFINITION Tagged ('$date')\r\nFIELDS\r\n  Dual(Year($1), YearStart($1)) AS [Year] Tagged ('$axis', '$year'),\r\n  Dual('Q'&Num(Ceil(Num(Month($1))/3)),Num(Ceil(NUM(Month($1))/3),00)) AS [Quarter] Tagged ('$quarter', '$cyclic'),\r\n  Dual(Year($1)&'-Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [YearQuarter] Tagged ('$yearquarter', '$qualified'),\r\n  Dual('Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [_YearQuarter] Tagged ('$yearquarter', '$hidden', '$simplified'),\r\n  Month($1) AS [Month] Tagged ('$month', '$cyclic'),\r\n  Dual(Year($1)&'-'&Month($1), monthstart($1)) AS [YearMonth] Tagged ('$axis', '$yearmonth', '$qualified'),\r\n  Dual(Month($1), monthstart($1)) AS [_YearMonth] Tagged ('$axis', '$yearmonth', '$simplified', '$hidden'),\r\n  Dual('W'&Num(Week($1),00), Num(Week($1),00)) AS [Week] Tagged ('$weeknumber', '$cyclic'),\r\n  Date(Floor($1)) AS [Date] Tagged ('$axis', '$date', '$qualified'),\r\n  Date(Floor($1), 'D') AS [_Date] Tagged ('$axis', '$date', '$hidden', '$simplified'),\r\n  If (DayNumberOfYear($1) <= DayNumberOfYear(Today()), 1, 0) AS [InYTD] ,\r\n  Year(Today())-Year($1) AS [YearsAgo] ,\r\n  If (DayNumberOfQuarter($1) <= DayNumberOfQuarter(Today()),1,0) AS [InQTD] ,\r\n  4*Year(Today())+Ceil(Month(Today())/3)-4*Year($1)-Ceil(Month($1)/3) AS [QuartersAgo] ,\r\n  Ceil(Month(Today())/3)-Ceil(Month($1)/3) AS [QuarterRelNo] ,\r\n  If(Day($1)<=Day(Today()),1,0) AS [InMTD] ,\r\n  12*Year(Today())+Month(Today())-12*Year($1)-Month($1) AS [MonthsAgo] ,\r\n  Month(Today())-Month($1) AS [MonthRelNo] ,\r\n  If(WeekDay($1)<=WeekDay(Today()),1,0) AS [InWTD] ,\r\n  (WeekStart(Today())-WeekStart($1))/7 AS [WeeksAgo] ,\r\n  Week(Today())-Week($1) AS [WeekRelNo] ;\r\n\r\nDERIVE FIELDS FROM FIELDS [Customer DOB], [Staff DOB], [Staff Hire Date], [Claim Occurrence Date], [Claim Notification Date], [Claim Settled Date], [Policy Start Date], [Policy End Date], [BenchmarkDate] USING [autoCalendar] ;\r\n\r\n\r\n\r\n"}}